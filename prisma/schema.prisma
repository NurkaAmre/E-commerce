generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @default(cuid())
  username        String      @unique
  first_name      String  
  last_name       String
  email           String      @unique
  phone           Int?
  address         Address?     @relation(fields: [address_id], references: [id])
  address_id      Int?
  orders          Order[]
  created_at      DateTime    @default(now())
  updated_at      DateTime   @updatedAt
}

model Address {
  id              Int         @id @default(autoincrement())
  street          String
  zip             Int
  city            String
  province        String
  country         String
  user            User[]
  created_at      DateTime    @default(now())
  updated_at      DateTime   @updatedAt
}

model Order {
  id              String    @id @default(cuid())
  user            User      @relation(fields: [userId], references: [id])
  userId          String
  amount          Float
  currency        String
  status          String
  createdDate     DateTime  @default(now())
  paymentIntentID String?   @unique
  products        Product[]
}

model Product {
  id          String  @id @default(cuid())
  name        String
  description String?
  unit_amount Float
  image       String?
  quantity    Float   @default(0)
  orders      Order[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}